=== tests/cases/conformance/enums/spreadEnum1.ts ===
enum BasicEvents {
>BasicEvents : Symbol(BasicEvents, Decl(spreadEnum1.ts, 0, 0))

    Start = "Start",
>Start : Symbol(BasicEvents.Start, Decl(spreadEnum1.ts, 0, 18))

    Finish = "Finish"
>Finish : Symbol(BasicEvents.Finish, Decl(spreadEnum1.ts, 1, 20))
}

enum AdvEvents {
>AdvEvents : Symbol(AdvEvents, Decl(spreadEnum1.ts, 3, 1))

    ...BasicEvents,
>BasicEvents : Symbol(BasicEvents, Decl(spreadEnum1.ts, 0, 0))

    Pause = "Pause",
>Pause : Symbol(AdvEvents.Pause, Decl(spreadEnum1.ts, 6, 19))

    Resume = "Resume"
>Resume : Symbol(AdvEvents.Resume, Decl(spreadEnum1.ts, 7, 20))
}

declare let basic: BasicEvents;
>basic : Symbol(basic, Decl(spreadEnum1.ts, 11, 11))
>BasicEvents : Symbol(BasicEvents, Decl(spreadEnum1.ts, 0, 0))

declare let adv: AdvEvents;
>adv : Symbol(adv, Decl(spreadEnum1.ts, 13, 11))
>AdvEvents : Symbol(AdvEvents, Decl(spreadEnum1.ts, 3, 1))

adv = basic;
>adv : Symbol(adv, Decl(spreadEnum1.ts, 13, 11))
>basic : Symbol(basic, Decl(spreadEnum1.ts, 11, 11))

basic = BasicEvents.Start;
>basic : Symbol(basic, Decl(spreadEnum1.ts, 11, 11))
>BasicEvents.Start : Symbol(BasicEvents.Start, Decl(spreadEnum1.ts, 0, 18))
>BasicEvents : Symbol(BasicEvents, Decl(spreadEnum1.ts, 0, 0))
>Start : Symbol(BasicEvents.Start, Decl(spreadEnum1.ts, 0, 18))

basic = BasicEvents.Finish;
>basic : Symbol(basic, Decl(spreadEnum1.ts, 11, 11))
>BasicEvents.Finish : Symbol(BasicEvents.Finish, Decl(spreadEnum1.ts, 1, 20))
>BasicEvents : Symbol(BasicEvents, Decl(spreadEnum1.ts, 0, 0))
>Finish : Symbol(BasicEvents.Finish, Decl(spreadEnum1.ts, 1, 20))

adv = AdvEvents.Start;
>adv : Symbol(adv, Decl(spreadEnum1.ts, 13, 11))
>AdvEvents.Start : Symbol(BasicEvents.Start, Decl(spreadEnum1.ts, 0, 18))
>AdvEvents : Symbol(AdvEvents, Decl(spreadEnum1.ts, 3, 1))
>Start : Symbol(BasicEvents.Start, Decl(spreadEnum1.ts, 0, 18))

adv = AdvEvents.Finish;
>adv : Symbol(adv, Decl(spreadEnum1.ts, 13, 11))
>AdvEvents.Finish : Symbol(BasicEvents.Finish, Decl(spreadEnum1.ts, 1, 20))
>AdvEvents : Symbol(AdvEvents, Decl(spreadEnum1.ts, 3, 1))
>Finish : Symbol(BasicEvents.Finish, Decl(spreadEnum1.ts, 1, 20))

adv = AdvEvents.Pause;
>adv : Symbol(adv, Decl(spreadEnum1.ts, 13, 11))
>AdvEvents.Pause : Symbol(AdvEvents.Pause, Decl(spreadEnum1.ts, 6, 19))
>AdvEvents : Symbol(AdvEvents, Decl(spreadEnum1.ts, 3, 1))
>Pause : Symbol(AdvEvents.Pause, Decl(spreadEnum1.ts, 6, 19))

adv = AdvEvents.Resume;
>adv : Symbol(adv, Decl(spreadEnum1.ts, 13, 11))
>AdvEvents.Resume : Symbol(AdvEvents.Resume, Decl(spreadEnum1.ts, 7, 20))
>AdvEvents : Symbol(AdvEvents, Decl(spreadEnum1.ts, 3, 1))
>Resume : Symbol(AdvEvents.Resume, Decl(spreadEnum1.ts, 7, 20))

adv = BasicEvents.Start;
>adv : Symbol(adv, Decl(spreadEnum1.ts, 13, 11))
>BasicEvents.Start : Symbol(BasicEvents.Start, Decl(spreadEnum1.ts, 0, 18))
>BasicEvents : Symbol(BasicEvents, Decl(spreadEnum1.ts, 0, 0))
>Start : Symbol(BasicEvents.Start, Decl(spreadEnum1.ts, 0, 18))

adv = BasicEvents.Finish;
>adv : Symbol(adv, Decl(spreadEnum1.ts, 13, 11))
>BasicEvents.Finish : Symbol(BasicEvents.Finish, Decl(spreadEnum1.ts, 1, 20))
>BasicEvents : Symbol(BasicEvents, Decl(spreadEnum1.ts, 0, 0))
>Finish : Symbol(BasicEvents.Finish, Decl(spreadEnum1.ts, 1, 20))

