=== tests/cases/compiler/definiteAssignmentOfDestructuredVariable.ts ===
// https://github.com/Microsoft/TypeScript/issues/20994
interface Options {
    a?: number | object;
>a : number | object | undefined

    b: () => void;
>b : () => void
}

class C<T extends Options> {
>C : C<T>

    foo!: { [P in keyof T]: T[P] }
>foo : { [P in keyof T]: T[P]; }

    method() {
>method : () => void

        let { a, b } = this.foo;
>a : { [P in keyof T]: T[P]; }["a"]
>b : { [P in keyof T]: T[P]; }["b"]
>this.foo : { [P in keyof T]: T[P]; }
>this : this
>foo : { [P in keyof T]: T[P]; }

        !(a && b);
>!(a && b) : false
>(a && b) : { [P in keyof T]: T[P]; }["b"]
>a && b : { [P in keyof T]: T[P]; }["b"]
>a : { [P in keyof T]: T[P]; }["a"]
>b : { [P in keyof T]: T[P]; }["b"]

        a;
>a : { [P in keyof T]: T[P]; }["a"]
    }
}
