=== tests/cases/compiler/doExpressionBreak.ts ===
for (const i of [1]) {
>i : number
>[1] : number[]
>1 : 1

    (do {
>(do {        if (i === 1) break;        1;    }) : 1
>do {        if (i === 1) break;        1;    } : 1

        if (i === 1) break;
>i === 1 : boolean
>i : number
>1 : 1

        1;
>1 : 1

    })
}


for (const i of [1]) {
>i : number
>[1] : number[]
>1 : 1

    for (const i of [1]) {
>i : number
>[1] : number[]
>1 : 1

        (do {
>(do {            if (i === 1) break;            1;        }) : 1
>do {            if (i === 1) break;            1;        } : 1

            if (i === 1) break;
>i === 1 : boolean
>i : number
>1 : 1

            1;
>1 : 1

        })
    }
}

a: for (const i of [1]) {
>a : any
>i : number
>[1] : number[]
>1 : 1

    for (const i of [1]) {
>i : number
>[1] : number[]
>1 : 1

        (do {
>(do {            if (i === 1) break a;            1;        }) : 1
>do {            if (i === 1) break a;            1;        } : 1

            if (i === 1) break a;
>i === 1 : boolean
>i : number
>1 : 1
>a : any

            1;
>1 : 1

        })
    }
}

a: {
>a : any

    (do { break a })
>(do { break a }) : never
>do { break a } : never
>a : any
}

