=== tests/cases/conformance/jsx/inline/renderer.d.ts ===
declare global {
>global : any

    namespace JSX {
        interface IntrinsicElements {
            [e: string]: any;
>e : string
        }
    }
}
export function dom(...args: any[]): void;
>dom : (...args: any[]) => void
>args : any[]

export function otherdom(...args: any[]): void;
>otherdom : (...args: any[]) => void
>args : any[]

export function createElement(...args: any[]): void;
>createElement : (...args: any[]) => void
>args : any[]

export { dom as default };
>dom : (...args: any[]) => void
>default : (...args: any[]) => void

=== tests/cases/conformance/jsx/inline/otherreacty.tsx ===
/** @jsx React.createElement */
import * as React from "./renderer";
>React : typeof React

<h></h>
><h></h> : void
>h : any
>h : any

=== tests/cases/conformance/jsx/inline/other.tsx ===
/** @jsx h */
import { dom as h } from "./renderer"
>dom : (...args: any[]) => void
>h : (...args: any[]) => void

export const prerendered = <h></h>;
>prerendered : void
><h></h> : void
>h : (...args: any[]) => void
>h : (...args: any[]) => void

=== tests/cases/conformance/jsx/inline/othernoalias.tsx ===
/** @jsx otherdom */
import { otherdom } from "./renderer"
>otherdom : (...args: any[]) => void

export const prerendered2 = <h></h>;
>prerendered2 : void
><h></h> : void
>h : any
>h : any

=== tests/cases/conformance/jsx/inline/reacty.tsx ===
import React from "./renderer"
>React : (...args: any[]) => void

export const prerendered3 = <h></h>;
>prerendered3 : error
><h></h> : error
>h : any
>h : any

=== tests/cases/conformance/jsx/inline/index.tsx ===
/** @jsx dom */
import { dom } from "./renderer"
>dom : (...args: any[]) => void

<h></h>
><h></h> : void
>h : any
>h : any

export * from "./other";
export * from "./othernoalias";
export * from "./reacty";

