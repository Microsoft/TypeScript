=== tests/cases/compiler/nonNullReferenceMatching.ts ===
type ElementRef = (element: HTMLElement | null) => void;
>ElementRef : ElementRef
>element : HTMLElement | null
>null : null

type ThumbProps = {
>ThumbProps : ThumbProps

    elementRef?: ElementRef;
>elementRef : ElementRef | undefined
}

type ComponentProps = {
>ComponentProps : ComponentProps

    thumbYProps?: ThumbProps;
>thumbYProps : ThumbProps | undefined

    thumbXProps: ThumbProps;
>thumbXProps : ThumbProps
}

type ThumbProps2 = {
>ThumbProps2 : ThumbProps2

    elementRef: ElementRef | null;
>elementRef : ElementRef | null
>null : null
}

type ComponentProps2 = {
>ComponentProps2 : ComponentProps2

    thumbYProps: ThumbProps2 | null;
>thumbYProps : ThumbProps2 | null
>null : null
}

class Component {
>Component : Component

    props!: ComponentProps;
>props : ComponentProps

    public thumbYElementRef = (ref: HTMLElement | null) => {
>thumbYElementRef : (ref: HTMLElement | null) => void
>(ref: HTMLElement | null) => {        typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref);        typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref);        typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref);        typeof this.props.thumbXProps.elementRef === 'function' && this.props.thumbXProps.elementRef(ref);        typeof this.props.thumbXProps.elementRef === 'function' && (this.props).thumbXProps.elementRef(ref);        typeof this.props.thumbXProps.elementRef === 'function' && (this.props.thumbXProps).elementRef(ref);        typeof this.props.thumbXProps.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);        typeof (this.props.thumbXProps).elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);        typeof this.props!.thumbXProps!.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);    } : (ref: HTMLElement | null) => void
>ref : HTMLElement | null
>null : null

        typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref);
>typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
>typeof this.props.thumbYProps!.elementRef === 'function' : boolean
>typeof this.props.thumbYProps!.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>this.props.thumbYProps!.elementRef : ElementRef | undefined
>this.props.thumbYProps! : ThumbProps
>this.props.thumbYProps : ThumbProps | undefined
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbYProps : ThumbProps | undefined
>elementRef : ElementRef | undefined
>'function' : "function"
>this.props.thumbYProps!.elementRef(ref) : void
>this.props.thumbYProps!.elementRef : ElementRef
>this.props.thumbYProps! : ThumbProps
>this.props.thumbYProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbYProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref);
>typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
>typeof (this.props.thumbYProps!.elementRef) === 'function' : boolean
>typeof (this.props.thumbYProps!.elementRef) : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>(this.props.thumbYProps!.elementRef) : ElementRef | undefined
>this.props.thumbYProps!.elementRef : ElementRef | undefined
>this.props.thumbYProps! : ThumbProps
>this.props.thumbYProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbYProps : ThumbProps
>elementRef : ElementRef | undefined
>'function' : "function"
>this.props.thumbYProps!.elementRef(ref) : void
>this.props.thumbYProps!.elementRef : ElementRef
>this.props.thumbYProps! : ThumbProps
>this.props.thumbYProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbYProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref);
>typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
>typeof ((this.props).thumbYProps!.elementRef)! === 'function' : boolean
>typeof ((this.props).thumbYProps!.elementRef)! : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>((this.props).thumbYProps!.elementRef)! : ElementRef
>((this.props).thumbYProps!.elementRef) : ElementRef | undefined
>(this.props).thumbYProps!.elementRef : ElementRef | undefined
>(this.props).thumbYProps! : ThumbProps
>(this.props).thumbYProps : ThumbProps
>(this.props) : ComponentProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbYProps : ThumbProps
>elementRef : ElementRef | undefined
>'function' : "function"
>this.props.thumbYProps!.elementRef(ref) : void
>this.props.thumbYProps!.elementRef : ElementRef
>this.props.thumbYProps! : ThumbProps
>this.props.thumbYProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbYProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof this.props.thumbXProps.elementRef === 'function' && this.props.thumbXProps.elementRef(ref);
>typeof this.props.thumbXProps.elementRef === 'function' && this.props.thumbXProps.elementRef(ref) : false | void
>typeof this.props.thumbXProps.elementRef === 'function' : boolean
>typeof this.props.thumbXProps.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>this.props.thumbXProps.elementRef : ElementRef | undefined
>this.props.thumbXProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef | undefined
>'function' : "function"
>this.props.thumbXProps.elementRef(ref) : void
>this.props.thumbXProps.elementRef : ElementRef
>this.props.thumbXProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof this.props.thumbXProps.elementRef === 'function' && (this.props).thumbXProps.elementRef(ref);
>typeof this.props.thumbXProps.elementRef === 'function' && (this.props).thumbXProps.elementRef(ref) : false | void
>typeof this.props.thumbXProps.elementRef === 'function' : boolean
>typeof this.props.thumbXProps.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>this.props.thumbXProps.elementRef : ElementRef | undefined
>this.props.thumbXProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef | undefined
>'function' : "function"
>(this.props).thumbXProps.elementRef(ref) : void
>(this.props).thumbXProps.elementRef : ElementRef
>(this.props).thumbXProps : ThumbProps
>(this.props) : ComponentProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof this.props.thumbXProps.elementRef === 'function' && (this.props.thumbXProps).elementRef(ref);
>typeof this.props.thumbXProps.elementRef === 'function' && (this.props.thumbXProps).elementRef(ref) : false | void
>typeof this.props.thumbXProps.elementRef === 'function' : boolean
>typeof this.props.thumbXProps.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>this.props.thumbXProps.elementRef : ElementRef | undefined
>this.props.thumbXProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef | undefined
>'function' : "function"
>(this.props.thumbXProps).elementRef(ref) : void
>(this.props.thumbXProps).elementRef : ElementRef
>(this.props.thumbXProps) : ThumbProps
>this.props.thumbXProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof this.props.thumbXProps.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);
>typeof this.props.thumbXProps.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : false | void
>typeof this.props.thumbXProps.elementRef === 'function' : boolean
>typeof this.props.thumbXProps.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>this.props.thumbXProps.elementRef : ElementRef | undefined
>this.props.thumbXProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef | undefined
>'function' : "function"
>((this.props)!.thumbXProps)!.elementRef(ref) : void
>((this.props)!.thumbXProps)!.elementRef : ElementRef
>((this.props)!.thumbXProps)! : ThumbProps
>((this.props)!.thumbXProps) : ThumbProps
>(this.props)!.thumbXProps : ThumbProps
>(this.props)! : ComponentProps
>(this.props) : ComponentProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof (this.props.thumbXProps).elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);
>typeof (this.props.thumbXProps).elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : false | void
>typeof (this.props.thumbXProps).elementRef === 'function' : boolean
>typeof (this.props.thumbXProps).elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>(this.props.thumbXProps).elementRef : ElementRef | undefined
>(this.props.thumbXProps) : ThumbProps
>this.props.thumbXProps : ThumbProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef | undefined
>'function' : "function"
>((this.props)!.thumbXProps)!.elementRef(ref) : void
>((this.props)!.thumbXProps)!.elementRef : ElementRef
>((this.props)!.thumbXProps)! : ThumbProps
>((this.props)!.thumbXProps) : ThumbProps
>(this.props)!.thumbXProps : ThumbProps
>(this.props)! : ComponentProps
>(this.props) : ComponentProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof this.props!.thumbXProps!.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref);
>typeof this.props!.thumbXProps!.elementRef === 'function' && ((this.props)!.thumbXProps)!.elementRef(ref) : false | void
>typeof this.props!.thumbXProps!.elementRef === 'function' : boolean
>typeof this.props!.thumbXProps!.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>this.props!.thumbXProps!.elementRef : ElementRef | undefined
>this.props!.thumbXProps! : ThumbProps
>this.props!.thumbXProps : ThumbProps
>this.props! : ComponentProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef | undefined
>'function' : "function"
>((this.props)!.thumbXProps)!.elementRef(ref) : void
>((this.props)!.thumbXProps)!.elementRef : ElementRef
>((this.props)!.thumbXProps)! : ThumbProps
>((this.props)!.thumbXProps) : ThumbProps
>(this.props)!.thumbXProps : ThumbProps
>(this.props)! : ComponentProps
>(this.props) : ComponentProps
>this.props : ComponentProps
>this : this
>props : ComponentProps
>thumbXProps : ThumbProps
>elementRef : ElementRef
>ref : HTMLElement | null

    };
}

class Component2 {
>Component2 : Component2

    props!: ComponentProps2;
>props : ComponentProps2

    public thumbYElementRef = (ref: HTMLElement | null) => {
>thumbYElementRef : (ref: HTMLElement | null) => void
>(ref: HTMLElement | null) => {        typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref);        typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref);        typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref);    } : (ref: HTMLElement | null) => void
>ref : HTMLElement | null
>null : null

        typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref);
>typeof this.props.thumbYProps!.elementRef === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
>typeof this.props.thumbYProps!.elementRef === 'function' : boolean
>typeof this.props.thumbYProps!.elementRef : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>this.props.thumbYProps!.elementRef : ElementRef | null
>this.props.thumbYProps! : ThumbProps2
>this.props.thumbYProps : ThumbProps2 | null
>this.props : ComponentProps2
>this : this
>props : ComponentProps2
>thumbYProps : ThumbProps2 | null
>elementRef : ElementRef | null
>'function' : "function"
>this.props.thumbYProps!.elementRef(ref) : void
>this.props.thumbYProps!.elementRef : ElementRef
>this.props.thumbYProps! : ThumbProps2
>this.props.thumbYProps : ThumbProps2
>this.props : ComponentProps2
>this : this
>props : ComponentProps2
>thumbYProps : ThumbProps2
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref);
>typeof (this.props.thumbYProps!.elementRef) === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
>typeof (this.props.thumbYProps!.elementRef) === 'function' : boolean
>typeof (this.props.thumbYProps!.elementRef) : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>(this.props.thumbYProps!.elementRef) : ElementRef | null
>this.props.thumbYProps!.elementRef : ElementRef | null
>this.props.thumbYProps! : ThumbProps2
>this.props.thumbYProps : ThumbProps2
>this.props : ComponentProps2
>this : this
>props : ComponentProps2
>thumbYProps : ThumbProps2
>elementRef : ElementRef | null
>'function' : "function"
>this.props.thumbYProps!.elementRef(ref) : void
>this.props.thumbYProps!.elementRef : ElementRef
>this.props.thumbYProps! : ThumbProps2
>this.props.thumbYProps : ThumbProps2
>this.props : ComponentProps2
>this : this
>props : ComponentProps2
>thumbYProps : ThumbProps2
>elementRef : ElementRef
>ref : HTMLElement | null

        typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref);
>typeof ((this.props).thumbYProps!.elementRef)! === 'function' && this.props.thumbYProps!.elementRef(ref) : false | void
>typeof ((this.props).thumbYProps!.elementRef)! === 'function' : boolean
>typeof ((this.props).thumbYProps!.elementRef)! : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>((this.props).thumbYProps!.elementRef)! : ElementRef
>((this.props).thumbYProps!.elementRef) : ElementRef | null
>(this.props).thumbYProps!.elementRef : ElementRef | null
>(this.props).thumbYProps! : ThumbProps2
>(this.props).thumbYProps : ThumbProps2
>(this.props) : ComponentProps2
>this.props : ComponentProps2
>this : this
>props : ComponentProps2
>thumbYProps : ThumbProps2
>elementRef : ElementRef | null
>'function' : "function"
>this.props.thumbYProps!.elementRef(ref) : void
>this.props.thumbYProps!.elementRef : ElementRef
>this.props.thumbYProps! : ThumbProps2
>this.props.thumbYProps : ThumbProps2
>this.props : ComponentProps2
>this : this
>props : ComponentProps2
>thumbYProps : ThumbProps2
>elementRef : ElementRef
>ref : HTMLElement | null
    }
}
