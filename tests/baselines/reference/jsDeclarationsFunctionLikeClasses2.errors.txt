tests/cases/conformance/jsdoc/declarations/referencer.js(4,34): error TS2339: Property 'dot' does not exist on type 'Point2D'.
tests/cases/conformance/jsdoc/declarations/source.js(50,21): error TS2339: Property 'storage' does not exist on type '{ x: number; y: number; dot(other: Vec): number; magnitude(): number; }'.
tests/cases/conformance/jsdoc/declarations/source.js(56,14): error TS2339: Property 'storage' does not exist on type '{ x: number; y: number; dot(other: Vec): number; magnitude(): number; }'.
tests/cases/conformance/jsdoc/declarations/source.js(59,21): error TS2339: Property 'storage' does not exist on type '{ x: number; y: number; dot(other: Vec): number; magnitude(): number; }'.
tests/cases/conformance/jsdoc/declarations/source.js(65,14): error TS2339: Property 'storage' does not exist on type '{ x: number; y: number; dot(other: Vec): number; magnitude(): number; }'.


==== tests/cases/conformance/jsdoc/declarations/source.js (4 errors) ====
    /**
     * @param {number} len
     */
    export function Vec(len) {
        /**
         * @type {number[]}
         */
        this.storage = new Array(len);
    }
    
    Vec.prototype = {
        /**
         * @param {Vec} other
         */
        dot(other) {
            if (other.storage.length !== this.storage.length) {
                throw new Error(`Dot product only applicable for vectors of equal length`);
            }
            let sum = 0;
            for (let i = 0; i < this.storage.length; i++) {
                sum += (this.storage[i] * other.storage[i]);
            }
            return sum;
        },
        magnitude() {
            let sum = 0;
            for (let i = 0; i < this.storage.length; i++) {
                sum += (this.storage[i] ** 2);
            }
            return Math.sqrt(sum);
        }
    }
    
    /**
     * @param {number} x
     * @param {number} y
     */
    export function Point2D(x, y) {
        if (!(this instanceof Point2D)) {
            return new Point2D(x, y);
        }
        Vec.call(this, 2);
        this.x = x;
        this.y = y;
    }
    
    Point2D.prototype = {
        __proto__: Vec.prototype,
        get x() {
            return this.storage[0];
                        ~~~~~~~
!!! error TS2339: Property 'storage' does not exist on type '{ x: number; y: number; dot(other: Vec): number; magnitude(): number; }'.
        },
        /**
         * @param {number} x
         */
        set x(x) {
            this.storage[0] = x;
                 ~~~~~~~
!!! error TS2339: Property 'storage' does not exist on type '{ x: number; y: number; dot(other: Vec): number; magnitude(): number; }'.
        },
        get y() {
            return this.storage[1];
                        ~~~~~~~
!!! error TS2339: Property 'storage' does not exist on type '{ x: number; y: number; dot(other: Vec): number; magnitude(): number; }'.
        },
        /**
         * @param {number} y
         */
        set y(y) {
            this.storage[1] = y;
                 ~~~~~~~
!!! error TS2339: Property 'storage' does not exist on type '{ x: number; y: number; dot(other: Vec): number; magnitude(): number; }'.
        }
    };
    
==== tests/cases/conformance/jsdoc/declarations/referencer.js (1 errors) ====
    import {Point2D} from "./source";
    
    export const origin = new Point2D(0, 0);
    export const res = Point2D(2, 3).dot(origin);
                                     ~~~
!!! error TS2339: Property 'dot' does not exist on type 'Point2D'.
    