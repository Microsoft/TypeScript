=== tests/cases/conformance/types/nominalBrands/uniqueNominalBrands1.ts ===
export type Paired = {
>Paired : Paired

    x: unique number;
>x : number & unique unknown

    y: unique number;
>y : number & unique unknown

};


export function isPaired(x: {x: number, y: number}): x is Paired {
>isPaired : (x: { x: number; y: number; }) => x is Paired
>x : { x: number; y: number; }
>x : number
>y : number

    return true;
>true : true
}

export function makePair(x: number, y: number): Paired {
>makePair : (x: number, y: number) => Paired
>x : number
>y : number

    return {x, y} as Paired;
>{x, y} as Paired : Paired
>{x, y} : { x: number; y: number; }
>x : number
>y : number
}

const a = makePair(0, 0);
>a : Paired
>makePair(0, 0) : Paired
>makePair : (x: number, y: number) => Paired
>0 : 0
>0 : 0

const b = {x: 0, y: 0};
>b : { x: number; y: number; }
>{x: 0, y: 0} : { x: number; y: number; }
>x : number
>0 : 0
>y : number
>0 : 0

if (Math.random() > 0.3) {
>Math.random() > 0.3 : boolean
>Math.random() : number
>Math.random : () => number
>Math : Math
>random : () => number
>0.3 : 0.3

    b.x = a.x;
>b.x = a.x : number & unique unknown
>b.x : number
>b : { x: number; y: number; }
>x : number
>a.x : number & unique unknown
>a : Paired
>x : number & unique unknown

    b.y = a.y;
>b.y = a.y : number & unique unknown
>b.y : number
>b : { x: number; y: number; }
>y : number
>a.y : number & unique unknown
>a : Paired
>y : number & unique unknown
}

if (isPaired(b)) {
>isPaired(b) : boolean
>isPaired : (x: { x: number; y: number; }) => x is Paired
>b : { x: number; y: number; }

    b.x = a.x;
>b.x = a.x : number & unique unknown
>b.x : number & unique unknown
>b : Paired
>x : number & unique unknown
>a.x : number & unique unknown
>a : Paired
>x : number & unique unknown

    b.y = a.y;
>b.y = a.y : number & unique unknown
>b.y : number & unique unknown
>b : Paired
>y : number & unique unknown
>a.y : number & unique unknown
>a : Paired
>y : number & unique unknown

    a.x = b.x;
>a.x = b.x : number & unique unknown
>a.x : number & unique unknown
>a : Paired
>x : number & unique unknown
>b.x : number & unique unknown
>b : Paired
>x : number & unique unknown

    a.y = b.y;
>a.y = b.y : number & unique unknown
>a.y : number & unique unknown
>a : Paired
>y : number & unique unknown
>b.y : number & unique unknown
>b : Paired
>y : number & unique unknown
}

