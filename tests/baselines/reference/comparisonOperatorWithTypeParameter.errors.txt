tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(6,15): error TS2365: Operator '<' cannot be applied to types 'T' and 'U'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(7,15): error TS2365: Operator '>' cannot be applied to types 'T' and 'U'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(8,15): error TS2365: Operator '<=' cannot be applied to types 'T' and 'U'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(9,15): error TS2365: Operator '>=' cannot be applied to types 'T' and 'U'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(10,15): error TS2367: This condition will always return 'false' since the types 'T' and 'U' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(11,15): error TS2367: This condition will always return 'true' since the types 'T' and 'U' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(12,15): error TS2367: This condition will always return 'false' since the types 'T' and 'U' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(13,15): error TS2367: This condition will always return 'true' since the types 'T' and 'U' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(15,15): error TS2365: Operator '<' cannot be applied to types 'U' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(16,15): error TS2365: Operator '>' cannot be applied to types 'U' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(17,15): error TS2365: Operator '<=' cannot be applied to types 'U' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(18,15): error TS2365: Operator '>=' cannot be applied to types 'U' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(19,15): error TS2367: This condition will always return 'false' since the types 'U' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(20,15): error TS2367: This condition will always return 'true' since the types 'U' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(21,15): error TS2367: This condition will always return 'false' since the types 'U' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(22,15): error TS2367: This condition will always return 'true' since the types 'U' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(24,15): error TS2365: Operator '<' cannot be applied to types 'T' and 'V'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(25,15): error TS2365: Operator '>' cannot be applied to types 'T' and 'V'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(26,15): error TS2365: Operator '<=' cannot be applied to types 'T' and 'V'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(27,15): error TS2365: Operator '>=' cannot be applied to types 'T' and 'V'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(28,15): error TS2367: This condition will always return 'false' since the types 'T' and 'V' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(29,15): error TS2367: This condition will always return 'true' since the types 'T' and 'V' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(30,15): error TS2367: This condition will always return 'false' since the types 'T' and 'V' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(31,15): error TS2367: This condition will always return 'true' since the types 'T' and 'V' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(33,15): error TS2365: Operator '<' cannot be applied to types 'V' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(34,15): error TS2365: Operator '>' cannot be applied to types 'V' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(35,15): error TS2365: Operator '<=' cannot be applied to types 'V' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(36,15): error TS2365: Operator '>=' cannot be applied to types 'V' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(37,15): error TS2367: This condition will always return 'false' since the types 'V' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(38,15): error TS2367: This condition will always return 'true' since the types 'V' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(39,15): error TS2367: This condition will always return 'false' since the types 'V' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(40,15): error TS2367: This condition will always return 'true' since the types 'V' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(43,15): error TS2365: Operator '<' cannot be applied to types 'T' and '{}'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(44,15): error TS2365: Operator '>' cannot be applied to types 'T' and '{}'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(45,15): error TS2365: Operator '<=' cannot be applied to types 'T' and '{}'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(46,15): error TS2365: Operator '>=' cannot be applied to types 'T' and '{}'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(47,15): error TS2367: This condition will always return 'false' since the types 'T' and '{}' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(48,15): error TS2367: This condition will always return 'true' since the types 'T' and '{}' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(49,15): error TS2367: This condition will always return 'false' since the types 'T' and '{}' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(50,15): error TS2367: This condition will always return 'true' since the types 'T' and '{}' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(52,15): error TS2365: Operator '<' cannot be applied to types '{}' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(53,15): error TS2365: Operator '>' cannot be applied to types '{}' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(54,15): error TS2365: Operator '<=' cannot be applied to types '{}' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(55,15): error TS2365: Operator '>=' cannot be applied to types '{}' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(56,15): error TS2367: This condition will always return 'false' since the types '{}' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(57,15): error TS2367: This condition will always return 'true' since the types '{}' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(58,15): error TS2367: This condition will always return 'false' since the types '{}' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(59,15): error TS2367: This condition will always return 'true' since the types '{}' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(61,15): error TS2365: Operator '<' cannot be applied to types 'T' and 'Object'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(62,15): error TS2365: Operator '>' cannot be applied to types 'T' and 'Object'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(63,15): error TS2365: Operator '<=' cannot be applied to types 'T' and 'Object'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(64,15): error TS2365: Operator '>=' cannot be applied to types 'T' and 'Object'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(65,15): error TS2367: This condition will always return 'false' since the types 'T' and 'Object' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(66,15): error TS2367: This condition will always return 'true' since the types 'T' and 'Object' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(67,15): error TS2367: This condition will always return 'false' since the types 'T' and 'Object' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(68,15): error TS2367: This condition will always return 'true' since the types 'T' and 'Object' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(70,15): error TS2365: Operator '<' cannot be applied to types 'Object' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(71,15): error TS2365: Operator '>' cannot be applied to types 'Object' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(72,15): error TS2365: Operator '<=' cannot be applied to types 'Object' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(73,15): error TS2365: Operator '>=' cannot be applied to types 'Object' and 'T'.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(74,15): error TS2367: This condition will always return 'false' since the types 'Object' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(75,15): error TS2367: This condition will always return 'true' since the types 'Object' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(76,15): error TS2367: This condition will always return 'false' since the types 'Object' and 'T' have no overlap.
tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts(77,15): error TS2367: This condition will always return 'true' since the types 'Object' and 'T' have no overlap.


==== tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts (64 errors) ====
    var a: {};
    var b: Object;
    
    function foo<T, U/* extends T*/, V/* extends U*/>(t: T, u: U, v: V) {
        // errors
        var ra1 = t < u;
                  ~~~~~
!!! error TS2365: Operator '<' cannot be applied to types 'T' and 'U'.
        var ra2 = t > u;
                  ~~~~~
!!! error TS2365: Operator '>' cannot be applied to types 'T' and 'U'.
        var ra3 = t <= u;
                  ~~~~~~
!!! error TS2365: Operator '<=' cannot be applied to types 'T' and 'U'.
        var ra4 = t >= u;
                  ~~~~~~
!!! error TS2365: Operator '>=' cannot be applied to types 'T' and 'U'.
        var ra5 = t == u;
                  ~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'T' and 'U' have no overlap.
        var ra6 = t != u;
                  ~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'T' and 'U' have no overlap.
        var ra7 = t === u;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'T' and 'U' have no overlap.
        var ra8 = t !== u;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'T' and 'U' have no overlap.
    
        var rb1 = u < t;
                  ~~~~~
!!! error TS2365: Operator '<' cannot be applied to types 'U' and 'T'.
        var rb2 = u > t;
                  ~~~~~
!!! error TS2365: Operator '>' cannot be applied to types 'U' and 'T'.
        var rb3 = u <= t;
                  ~~~~~~
!!! error TS2365: Operator '<=' cannot be applied to types 'U' and 'T'.
        var rb4 = u >= t;
                  ~~~~~~
!!! error TS2365: Operator '>=' cannot be applied to types 'U' and 'T'.
        var rb5 = u == t;
                  ~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'U' and 'T' have no overlap.
        var rb6 = u != t;
                  ~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'U' and 'T' have no overlap.
        var rb7 = u === t;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'U' and 'T' have no overlap.
        var rb8 = u !== t;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'U' and 'T' have no overlap.
    
        var rc1 = t < v;
                  ~~~~~
!!! error TS2365: Operator '<' cannot be applied to types 'T' and 'V'.
        var rc2 = t > v;
                  ~~~~~
!!! error TS2365: Operator '>' cannot be applied to types 'T' and 'V'.
        var rc3 = t <= v;
                  ~~~~~~
!!! error TS2365: Operator '<=' cannot be applied to types 'T' and 'V'.
        var rc4 = t >= v;
                  ~~~~~~
!!! error TS2365: Operator '>=' cannot be applied to types 'T' and 'V'.
        var rc5 = t == v;
                  ~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'T' and 'V' have no overlap.
        var rc6 = t != v;
                  ~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'T' and 'V' have no overlap.
        var rc7 = t === v;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'T' and 'V' have no overlap.
        var rc8 = t !== v;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'T' and 'V' have no overlap.
    
        var rd1 = v < t;
                  ~~~~~
!!! error TS2365: Operator '<' cannot be applied to types 'V' and 'T'.
        var rd2 = v > t;
                  ~~~~~
!!! error TS2365: Operator '>' cannot be applied to types 'V' and 'T'.
        var rd3 = v <= t;
                  ~~~~~~
!!! error TS2365: Operator '<=' cannot be applied to types 'V' and 'T'.
        var rd4 = v >= t;
                  ~~~~~~
!!! error TS2365: Operator '>=' cannot be applied to types 'V' and 'T'.
        var rd5 = v == t;
                  ~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'V' and 'T' have no overlap.
        var rd6 = v != t;
                  ~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'V' and 'T' have no overlap.
        var rd7 = v === t;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'V' and 'T' have no overlap.
        var rd8 = v !== t;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'V' and 'T' have no overlap.
    
        // ok
        var re1 = t < a;
                  ~~~~~
!!! error TS2365: Operator '<' cannot be applied to types 'T' and '{}'.
        var re2 = t > a;
                  ~~~~~
!!! error TS2365: Operator '>' cannot be applied to types 'T' and '{}'.
        var re3 = t <= a;
                  ~~~~~~
!!! error TS2365: Operator '<=' cannot be applied to types 'T' and '{}'.
        var re4 = t >= a;
                  ~~~~~~
!!! error TS2365: Operator '>=' cannot be applied to types 'T' and '{}'.
        var re5 = t == a;
                  ~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'T' and '{}' have no overlap.
        var re6 = t != a;
                  ~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'T' and '{}' have no overlap.
        var re7 = t === a;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'T' and '{}' have no overlap.
        var re8 = t !== a;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'T' and '{}' have no overlap.
    
        var rf1 = a < t;
                  ~~~~~
!!! error TS2365: Operator '<' cannot be applied to types '{}' and 'T'.
        var rf2 = a > t;
                  ~~~~~
!!! error TS2365: Operator '>' cannot be applied to types '{}' and 'T'.
        var rf3 = a <= t;
                  ~~~~~~
!!! error TS2365: Operator '<=' cannot be applied to types '{}' and 'T'.
        var rf4 = a >= t;
                  ~~~~~~
!!! error TS2365: Operator '>=' cannot be applied to types '{}' and 'T'.
        var rf5 = a == t;
                  ~~~~~~
!!! error TS2367: This condition will always return 'false' since the types '{}' and 'T' have no overlap.
        var rf6 = a != t;
                  ~~~~~~
!!! error TS2367: This condition will always return 'true' since the types '{}' and 'T' have no overlap.
        var rf7 = a === t;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types '{}' and 'T' have no overlap.
        var rf8 = a !== t;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types '{}' and 'T' have no overlap.
    
        var rg1 = t < b;
                  ~~~~~
!!! error TS2365: Operator '<' cannot be applied to types 'T' and 'Object'.
        var rg2 = t > b;
                  ~~~~~
!!! error TS2365: Operator '>' cannot be applied to types 'T' and 'Object'.
        var rg3 = t <= b;
                  ~~~~~~
!!! error TS2365: Operator '<=' cannot be applied to types 'T' and 'Object'.
        var rg4 = t >= b;
                  ~~~~~~
!!! error TS2365: Operator '>=' cannot be applied to types 'T' and 'Object'.
        var rg5 = t == b;
                  ~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'T' and 'Object' have no overlap.
        var rg6 = t != b;
                  ~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'T' and 'Object' have no overlap.
        var rg7 = t === b;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'T' and 'Object' have no overlap.
        var rg8 = t !== b;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'T' and 'Object' have no overlap.
    
        var rh1 = b < t;
                  ~~~~~
!!! error TS2365: Operator '<' cannot be applied to types 'Object' and 'T'.
        var rh2 = b > t;
                  ~~~~~
!!! error TS2365: Operator '>' cannot be applied to types 'Object' and 'T'.
        var rh3 = b <= t;
                  ~~~~~~
!!! error TS2365: Operator '<=' cannot be applied to types 'Object' and 'T'.
        var rh4 = b >= t;
                  ~~~~~~
!!! error TS2365: Operator '>=' cannot be applied to types 'Object' and 'T'.
        var rh5 = b == t;
                  ~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'Object' and 'T' have no overlap.
        var rh6 = b != t;
                  ~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'Object' and 'T' have no overlap.
        var rh7 = b === t;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'false' since the types 'Object' and 'T' have no overlap.
        var rh8 = b !== t;
                  ~~~~~~~
!!! error TS2367: This condition will always return 'true' since the types 'Object' and 'T' have no overlap.
    }