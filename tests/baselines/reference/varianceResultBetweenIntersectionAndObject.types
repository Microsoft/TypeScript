=== tests/cases/compiler/varianceResultBetweenIntersectionAndObject.ts ===
type X<T, U> = { traits: T & U };
>X : X<T, U>
>traits : T & U

// XX: true
type XX = X<true, true> extends X<any, false> ? false : true;
>XX : false
>true : true
>true : true
>false : false
>false : false
>true : true

// Same as above, but with & {} at the end
type Y<T, U> = { traits: T & U } & {};
>Y : { traits: T & U; }
>traits : T & U

// YY: false
type YY = Y<true, true> extends Y<any, false> ? false : true;
>YY : false
>true : true
>true : true
>false : false
>false : false
>true : true

